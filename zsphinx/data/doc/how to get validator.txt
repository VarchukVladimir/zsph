how to get standalone validator
(deprecated. see validator project)

1. download and install depot tools (as described in google chromium page):
   git clone https://git.chromium.org/chromium/tools/depot_tools.git
   export PATH="$PATH":`pwd`/depot_tools
   
2. download and install subversion:
   sudo apt-get install subversion
   
3* instal install libelf-dev (not mentioned by google)
   apt-get install libelf-dev
   
4. download nacl (as described in google chromium page):
   gclient config http://src.chromium.org/native_client/trunk/src/native_client
   gclient sync

5. compile nacl linux 64-bit version with command line:
   ./scons.py MODE=opt-linux,nacl platform=x86-64
   
6. take ~/nacl/native_client/scons-out/opt-linux-x86-64/staging/ncval

warning:
current version of nacl validator allows using of RDTSC operation which violates
determinism. therefore before building ncval the patch should be applied:
/src/trusted/validator/x86/ncval_reg_sfi/nc_illegal.c.gcov.html

 354               0 :   switch (state->cur_inst->insttype) {
 355                 :     case NACLi_RETURN:
 356                 :     case NACLi_EMMX:
 357                 :       /* EMMX needs to be supported someday but isn't ready yet. */
 358                 :     case NACLi_ILLEGAL:
 359                 :     case NACLi_SYSTEM:
 360                 :     case NACLi_RDMSR:
 361                 :     case NACLi_RDTSCP:
 362                 :     case NACLi_LONGMODE:
 363                 :     case NACLi_SVM:
 364                 :     case NACLi_3BYTE:
 365                 :     case NACLi_UNDEFINED:
 366               0 :       *is_legal = FALSE;
 367               0 :       *disallows_flags |= NACL_DISALLOWS_FLAG(NaClMarkedIllegal);
insert to any place a new case:
                           case NACLi_RDTSC:  

update (2013.01.02):
// find "const uint8_t kNaClFullStop = 0xf4;" in src/trusted/validator/x86/ncval_reg_sfi/ncvalidate_iter.c
// and after the line add folowing code:

const char kNaClRDTSC[] = {0x0f, 0x31}; /* x86 RDTSC opcode */
const uint16_t kNaClRDTSC_SIZE = sizeof kNaClRDTSC; /* x86 RDTSC opcode size */

// also replace original NCStubOutMem() with a new version:

void NCStubOutMem(NaClValidatorState *state, void *ptr, size_t num) {
  state->did_stub_out = TRUE;

  /* d'b: only RDTSC should be replaced with NOPs */
  if(num == kNaClRDTSC_SIZE && !memcmp(ptr, kNaClRDTSC, num))
    memset(ptr, kNaClNOP, num);
  else
    memset(ptr, kNaClFullStop, num);
}

// this is a quick and dirty hack. in the future nacl validator must have own project in zerovm and 
// the code should be changed on more neat way
